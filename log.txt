=======================================
说实在的，几个月前这个项目还是我诸多脑洞之一，当时并没有想到自己之后会投入这么多。
=======================================
一是为参赛准备材料二是养个好习惯，总之这次要学着写日志了……
=======================================
3.4
之前已经用python实现了一个初版，但是出于对效率的追求以及之后可能的GPU并行（逻辑运算太多，所以这个放到最后看看有没有必要吧），开始用c++重写
（希望竞赛养成的某些恶习不会影响开发……）
-添加文件"atlantis++.cpp"
-添加文件"net.h"，包含网络的结构、权值（基因），及网络类本身共三个类的声明
-添加文件"netstruct.cpp",定义NetStruct类的成员函数
-添加文件"stdfx.cpp","stdfx.h","targetver.h",这些与VS的预编译头有关

最近关于项目本身的一些新想法：
1.现在的速度瓶颈在fitness的计算上，原方法让网络间两两对弈，复杂度是平方级的，加之对弈一盘略慢（也可能是python速度的锅），并不适用。考虑所有网络与几个固定靶对弈，靶由随机生成及既有优秀网络混编，这样复杂度为线性
2.权值的训练可以考虑PSO和(λ+μ)-ES混合（现在python那个实现没有进化策略）
========================================
3.5
-添加文件"gene.h"
-添加文件"gene.app"
-移除文件"netstruct.cpp"

暂时搁置拓扑结构进化，现在实现的是激活函数为sigmoid的普通的前馈网络。
采用间接编码，Net类并不是网络主体，而是一个“执行器”，“本体”是Net装载的Gene类。这样有利于遗传算法的设计与实现。
Gene包含两个数组，parameters存储网络结构（每层的神经元数，默认第一层为输入层，最后一次为输出层），bases存储权值

